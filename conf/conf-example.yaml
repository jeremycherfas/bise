## Bise configuration file
#
# The "reports" section contains one entry for every row in our desired output
# table. Each entry in this section contains the following keys:
#
#   label:     The label for this report row.
#
#   test_type: One of "path", "path_regex", "referer_regex", or "agent_regex".
#              Describes the test to perform on a given server-log entry in
#              order to determine whether we should count it as a hit, as far
#              as this particular report is concerned.
#              Note that all regexes are run with Perl's "/x" modifier, meaning
#              that whitespace is ignored and comments are allowed (as you can
#              see in the chatty examples below).
#
#   test:      The text of the comparison we'll make with the given server-log 
#              entry. For test_type "path", this should be a literal string.
#              For every other test_type, this should be a regular expression.
#
reports:
    - label: All visitors
      test_type: path_regex
      test: |
        /$           # Match all requests whose paths end in '/'.
        |html$|htm$  # And all explicit requests for .html or .htm files.
        |xml$|json$  # And all requests for .xml (RSS) and .json (feed) files.
        
    - label: RSS feed
      test_type: path
      test: /atom.xml

    - label: JSON feed
      test_type: path
      test: /feed.json

    - label: Front page
      test_type: path
      test: /

    - label: From Twitter
      test_type: referer_regex
      test: \bt\.co\b # Match all reqs referred from Twitter's "t.co" URLs.

    - label: From web searches
      test_type: referer_regex
      test: \bgoogle.com|\bduckduckgo.com|\bbing.com
## Optional config
# Uncomment and set "days_to_consider" to some other integer if you'd like Bise
# to base its observations on a number of recent days other than the default 14
# (two weeks).
#
# days_to_consider: 14
#
# Uncomment and set "regular_interval_days" to some other integer if you'd like
# Bise to require "regular" visitors to have a period between their earliest and
# most-recent visit (within the days_to_consider window) of some number of days
# other than the default of 1.
#
# regular_interval_days: 1
